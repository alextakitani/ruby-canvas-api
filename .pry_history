subject
subject.connection
exit
suject
subject
subject.class
subject.connection
exit
resp
resp,body
resp.body
resp.body.has_key? :email
resp.body.errors
exit
resp
resp.body
exit
resp
exit
resp
exit
resp
exit
resp
exit
resp
resp.body
resp.body.first
exit
resp
exit
resp
exit
resp
exit
resp.body
exit
resp.body
exit
resp.body
exit
resp.body
exit
resp.body
exit
resp.body
exit
resp.body
exit
resp.body
exit
resp.body
r = resp.body.first
r = resp.body
r = resp.body.page_views
r = resp.body.page_views.count
exit
resp.body
resp.body.first
exit
resp
RubyCanvasApi::User.find 39852
RubyCanvasApi::User.find 30994
exit
resp.body.first
resp.body
exit
resp
resp.body
exit
resp.body
resp
exit
resp
exit
resp.body
ap resp.body.first
require 'awesome_print'
exit
ap resp.body.first
require 'awesome_print'
ap resp.body.first
ap resp.body[1]
ap resp.body[2]
ap resp.body[3]
ap resp.body
exit
ap resp.body
require 'awesome_print'
ap resp.body
exit
require 'awesome_print'
ap resp.body
ap resp.body.select{|s| s.submission.posted_at.present?}
ap resp.body.select{|s| s&.submission&.posted_at&.present?}
ap resp.body.select{|s| !s&.submission&.posted_at&.nil?}
ap resp.body.select{|s| s&.submission&.posted_at != nil}
exit
resp.body
exit
resp.body
require 'awesome_print'
ap resp.body
exit
resp
respresp.body
resp.body
require 'awesome_print'
ap resp.body
exit
require 'awesome_print'
ap resp.body
File.open("log.txt", "w") { |f| f.write resp.body}
resp.body.size
resp.headers
resp.headers.link
resp.headers["link"]
exit
